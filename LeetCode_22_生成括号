见解析：http://www.cnblogs.com/grandyang/p/4444160.html
//递归
class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string> res;
        dfs(n,n,"",res);
        return res;
    }
private:
    void dfs(int left, int right, string out, vector<string>& res){
        if(left > right) return;
        if(left==0 && right==0){
            res.push_back(out);
            return;
        }else {
            if(left > 0) dfs(left-1,right,out+'(',res);
            if(right > 0) dfs(left,right-1,out+')',res);
        }
    }
};
