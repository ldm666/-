几种解法：http://www.cnblogs.com/grandyang/p/4322653.html
class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int res=0;
        for(int i=0;i<heights.size();++i){
            if(i+1<heights.size() && heights[i]<=heights[i+1]) continue;
            int minH=heights[i];
            for(int j=i;j>=0;--j){
                minH=min(minH,heights[j]);
                int area=minH*(i-j+1);
                res=max(res,area);
            }
        }
        return res;
    }
};

单调栈：看不懂
class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int res = 0;
        stack<int> st;
        heights.push_back(0);
        for (int i = 0; i < heights.size(); ++i) {
            while (!st.empty() && heights[st.top()] >= heights[i]) {
                int cur = st.top(); st.pop();
                res = max(res, heights[cur] * (st.empty() ? i : (i - st.top() - 1)));
            }
            st.push(i);
        }
        return res;
    }
};
