http://www.cnblogs.com/grandyang/p/4623394.html
//解一：利用2的幂次方数只有最高位是1的特点
class Solution {
public:
    bool isPowerOfTwo(int n) {
        int cnt = 0;
        while (n > 0) {
            cnt += (n & 1);
            n >>= 1;    //右移
        }
        return cnt == 1;
    } 
};

解二：如果只有最高是1，那么n&n-1=0  因为-1导致最高位为0，其余都变1
class Solution {
public:
    bool isPowerOfTwo(int n) {
        return (n > 0) && (!(n & (n - 1))); 
    } 
};
