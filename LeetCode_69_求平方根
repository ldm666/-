二分法总结帖子：http://www.cnblogs.com/grandyang/p/6854825.html
二分法：因为小数舍去，所以相当于求第一个不大于目标值的数，最后返回right的前一个位置

//当循环结束时，right的位置是第一个大于目标值的数
class Solution {
public:
    int mySqrt(int x) {
        if (x <= 1) return x;
        int left = 0, right = x;
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (x / mid >= mid) left = mid + 1;   //不能写成x >=mid*mid 会出错
            else right = mid;
        }
        return right - 1;
    }
};

牛顿法：http://www.cnblogs.com/grandyang/p/4346413.html
class Solution {
public:
    int mySqrt(int x) {
        long res = x;
        while (res * res > x) {
            res = (res + x / res) / 2;
        }
        return res;
    }
};
