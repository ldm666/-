//二分法，感觉这题很重要
http://www.cnblogs.com/grandyang/p/4325648.html
二分搜索法的关键在于获得了中间数后，判断下面要搜索左半段还是右半段，可以观察出规律，
如果中间的数小于最右边的数，则右半段是有序的，若中间数大于最右边数，则左半段是有序的，
我们只要在有序的半段里用首尾两个数组来判断目标值是否在这一区域内，这样就可以确定保留哪半边了

class Solution {
public:
    int search(vector<int>& nums, int target) {
        if(nums.empty()) return -1;
        int left=0,right=nums.size()-1;
        while(left <= right){
            int mid=left+(right-left)/2;
            if(nums[mid]==target) return mid;
            else if(nums[mid]<=nums[right]){  //右半区有序
                 if(nums[mid]<=target && nums[right]>=target) left=mid+1;
                 else right=mid-1;
            }
            //左半区有序
            else {
              if(nums[left]<=target && nums[mid]>=target) right=mid-1;
              else left=mid+1;
            }
        }
        return -1;
    }
};
