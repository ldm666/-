//和42题接雨水做下比较！！！！
双指针
解析见官方解答：https://leetcode-cn.com/problems/container-with-most-water/solution/
//每次较矮的一方向较高的一方接近
class Solution {
public:
    int maxArea(vector<int>& height) {
        int left=0,right=height.size()-1;
        int res=0;
        while(left < right){
            int cur=(right-left)*min(height[left],height[right]);
            res=max(res,cur);
            if(height[left] > height[right]) right--;
            else left++;
        }
        return res;
    }
};

//稍微优化，遇到高度相等的直接跳过
class Solution {
public:
    int maxArea(vector<int>& height) {
        int res = 0, i = 0, j = height.size() - 1;
        while (i < j) {
            int h = min(height[i], height[j]);
            res = max(res, h * (j - i));
            while (i < j && h == height[i]) ++i;
            while (i < j && h == height[j]) --j;
        }
        return res;
    }
};
