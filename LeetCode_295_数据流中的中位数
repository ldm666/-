//利用大小堆
class MedianFinder {
    priority_queue<int> lo;   //大顶堆
    priority_queue<int,vector<int>,greater<int>> hi;  //小顶堆
public:
    /** initialize your data structure here. */
    MedianFinder() {
        
    }
    
    void addNum(int num) {
        lo.push(num);
        hi.push(lo.top());
        lo.pop();
        if(lo.size()<hi.size()){    //平衡，而且这里保证了hi的元素个数不会大于lo
            lo.push(hi.top());
            hi.pop();
        }
    }
    
    double findMedian() {
        return lo.size()>hi.size() ? lo.top() : (hi.top()+lo.top())/2.0;
    }
};

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
