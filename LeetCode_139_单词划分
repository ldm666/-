//动态规划
//见http://www.cnblogs.com/grandyang/p/4257740.html
//用j把[0, i)范围内的子串分为了两部分，[0, j) 和 [j, i)，其中范围 [0, j) 就是dp[j]，范围 [j, i) 就是s.substr(j, i-j)，
//其中dp[j]是之前的状态，我们已经算出来了，可以直接取，只需要在字典中查找s.substr(j, i-j)是否存在了，如果二者均为true，
//将dp[i]赋为true，并且break掉，此时就不需要再用j去分[0, i)范围了，因为[0, i)范围已经可以拆分了

class Solution {
public:
    bool wordBreak(string s, unordered_set<string> &dict) {
        //unordered_set<string> wordSet(dict.begin(), dict.end());
        int len=s.size();
        vector<bool> dp(len+1);
        dp[0]=true;
        for(int i=0;i<dp.size();i++){
            for(int j=0;j<i;j++){
                if(dp[j] && dict.find(s.substr(j,i-j))!=dict.end()){
                    dp[i]=true;
                    break;
                }
            }
        }
        return dp[len];
    }
};
