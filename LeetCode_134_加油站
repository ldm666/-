//我们首先要知道能走完整个环的前提是gas的总量要大于cost的总量，这样才会有起点的存在
//假设开始设置起点start = 0, 并从这里出发，如果当前的gas值大于cost值，就可以继续前进，
//此时到下一个站点，剩余的gas加上当前的gas再减去cost，看是否大于0，若大于0，则继续前进。
//当到达某一站点时，若这个值小于0了，则说明从起点到这个点中间的任何一个点都不能作为起点，则把起点设为下一个点，继续遍历。
//当遍历完整个环时，当前保存的起点即为所求

class Solution {
public:
    int canCompleteCircuit(vector<int> &gas, vector<int> &cost) {
        int len=gas.size();
        int sum=0,total=0,start=0;
        for(int i=0;i<len;i++){
            sum+=gas[i]-cost[i];  //当前剩余油量
            total+=gas[i]-cost[i]; //tatal在循环结束时根据正负能判断是否存在这个环
            if(sum<0){
                sum=0;
                start=i+1;
            }
        }
        return (total < 0) ? -1 : start;
    }
};
