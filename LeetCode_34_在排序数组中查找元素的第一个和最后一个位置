//二分法
//先用二分法找到一个target，然后左右分别找左右界
class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        if(nums.size()==0) return {-1,-1};
        vector<int> res;
        int left=0,right=nums.size()-1;
        int mid=0;
        while(left <= right){
            mid=left+(right-left)/2;
            if(nums[mid] > target){
                right=mid-1;
            }else if(nums[mid] < target){
                left=mid+1;
            }else{
                break;    //记得break，不然就算找到了还是要继续循环
            }
        }
        if(nums[mid]!=target) return {-1,-1};
        //找左右界
        int l=mid,r=mid;
        while(l>0 && nums[l-1]==target) --l;
        while(r<nums.size()-1 && nums[r+1]==target) ++r;
        return {l,r};
    }
};
